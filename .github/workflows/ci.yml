name: CI

on: [ workflow_dispatch, push ]

jobs:
  CI:
    name: CI
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: eu-central-1
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Use Java JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: 'Lambda: Integration tests'
        working-directory: log-play-lambda
        run: mvn test

      - name: 'Lambda: Create Package'
        working-directory: log-play-lambda
        run: mvn package -DskipTests

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: log-play-page/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-

      - name: 'Page: Setup Node.js'
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: 'Page: Build app'
        working-directory: log-play-page
        run: |
          npm install -g yarn
          yarn install --frozen-lockfile
          yarn build

      - name: Setup AWS SAM
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Update Swagger UI Api
        run: |
          aws s3 cp ./openapi.yml s3://log-play-app-swagger-ui

      - name: Upload log-play-page to S3
        run: |
          aws s3 sync log-play-page/out/ s3://log-play-page-test

      - name: Deploy lambda with SAM
        run: |
          sam deploy \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --stack-name log-play-app \
            --s3-bucket pioter-lambdas  \
            --capabilities CAPABILITY_IAM \
            --region ${{ env.AWS_DEFAULT_REGION }} \
            --parameter-overrides ApiKey=${{ secrets.API_KEY }}
